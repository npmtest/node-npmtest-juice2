{"/home/travis/build/npmtest/node-npmtest-juice2/test.js":"/* istanbul instrument in package npmtest_juice2 */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-juice2/lib.npmtest_juice2.js":"/* istanbul instrument in package npmtest_juice2 */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_juice2 = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_juice2 = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-juice2/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-juice2 && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_juice2 */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_juice2\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_juice2.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_juice2.rollup.js'] =\n            local.assetsDict['/assets.npmtest_juice2.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_juice2.__dirname + '/lib.npmtest_juice2.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-juice2/node_modules/juice2/index.js":"\r\nmodule.exports = require('./lib/juice');\r\n","/home/travis/build/npmtest/node-npmtest-juice2/node_modules/juice2/lib/juice.js":"\r\n/**\r\n * juice\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\nmodule.exports = juice;\r\n\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar utils = require('./utils');\r\nvar Selector = require('./selector');\r\nvar Property = require('./property');\r\nvar packageJson = require('../package');\r\nvar fs = require('fs');\r\nvar Pend = require('pend');\r\nvar url = require('url');\r\nvar superagent = require('superagent');\r\nvar path = require('path');\r\nvar assert = require('assert');\r\nvar os = require('os');\r\nvar styleSelector = new Selector('<style attribute>', [1, 0, 0, 0]);\r\nvar importantSelector = new Selector('<!important>', [2, 0, 0, 0]);\r\n\r\n/**\r\n * Package version\r\n */\r\n\r\njuice.version = packageJson.version;\r\n\r\n/**\r\n * Export Selector.\r\n */\r\n\r\njuice.Selector = Selector;\r\n\r\n/**\r\n * Export Property.\r\n */\r\n\r\njuice.Property = Property;\r\n\r\n/**\r\n * Export utils.\r\n */\r\n\r\njuice.utils = require('./utils');\r\n\r\n\r\njuice.ignoredPseudos = ['hover', 'active', 'focus', 'visited', 'link'];\r\njuice.widthElements = ['TABLE', 'TD', 'IMG'];\r\n\r\njuice.juiceDocument = juiceDocument;\r\njuice.juiceContent = juiceContent;\r\njuice.juiceFile = juiceFile;\r\njuice.inlineDocument = inlineDocument;\r\njuice.inlineContent = inlineContent;\r\n\r\nfunction inlineDocument(document, css, options) {\r\n\r\n  var rules = utils.parseCSS(css)\r\n    , editedElements = [];\r\n\r\n  rules.forEach(handleRule);\r\n  editedElements.forEach(setStyleAttrs);\r\n\r\n  if (options && options.applyWidthAttributes) {\r\n    editedElements.forEach(setWidthAttrs);\r\n  }\r\n\r\n  function handleRule(rule) {\r\n    var sel = rule[0]\r\n      , style = rule[1]\r\n      , selector = new Selector(sel);\r\n\r\n    // skip rule if the selector has any pseudos which are ignored\r\n    var parsedSelector = selector.parsed();\r\n    for (var i = 0; i < parsedSelector.length; ++i) {\r\n      var subSel = parsedSelector[i];\r\n      if (subSel.pseudos) {\r\n        for (var j = 0; j < subSel.pseudos.length; ++j) {\r\n          var subSelPseudo = subSel.pseudos[j];\r\n          if (juice.ignoredPseudos.indexOf(subSelPseudo.name) >= 0) return;\r\n        }\r\n      }\r\n    }\r\n\r\n    var els;\r\n    try {\r\n      els = document.querySelectorAll(sel);\r\n    } catch (err) {\r\n      // skip invalid selector\r\n      return;\r\n    }\r\n    utils.toArray(els).forEach(function (el) {\r\n      if (!el.styleProps) {\r\n        el.styleProps = {}\r\n\r\n        // if the element has inline styles, fake selector with topmost specificity\r\n        if (el.getAttribute('style')) {\r\n          var cssText = '* { ' + el.getAttribute('style') + ' } '\r\n          addProps(utils.parseCSS(cssText)[0][1], styleSelector);\r\n        }\r\n\r\n        // store reference to an element we need to compile style=\"\" attr for\r\n        editedElements.push(el);\r\n      }\r\n\r\n      // go through the properties\r\n      function addProps (style, selector) {\r\n        for (var i = 0, l = style.length; i < l; i++) {\r\n          var name = style[i]\r\n            , value = style[name]\r\n            , sel = style._importants[name] ? importantSelector : selector\r\n            , prop = new Property(name, value, sel)\r\n            , existing = el.styleProps[name];\r\n\r\n          if (existing) {\r\n            var winner = existing.compare(prop)\r\n              , loser = prop === winner ? existing : prop\r\n\r\n            if (winner === prop) el.styleProps[name] = prop;\r\n          } else {\r\n            el.styleProps[name] = prop;\r\n          }\r\n        }\r\n      }\r\n\r\n      addProps(style, selector);\r\n    });\r\n  }\r\n\r\n  function setStyleAttrs(el) {\r\n    var style = [];\r\n    for (var i in el.styleProps) {\r\n      style.push(el.styleProps[i].prop + \": \" + el.styleProps[i].value.replace(/[\"]/g, \"'\") + \";\");\r\n    }\r\n    // sorting will arrange styles like padding: before padding-bottom: which will preserve the expected styling\r\n    style = style.sort( function ( a, b )\r\n    {\r\n      var aProp = a.split( ':' )[0];\r\n      var bProp = b.split( ':' )[0];\r\n      return ( aProp > bProp ? 1 : aProp < bProp ? -1 : 0 );\r\n    } );\r\n    el.setAttribute('style', style.join(' '));\r\n  }\r\n  \r\n  function setWidthAttrs(el) {\r\n    if (juice.widthElements.indexOf(el.nodeName) > -1) {\r\n      for (var i in el.styleProps) {\r\n        if (el.styleProps[i].prop === 'width' && el.styleProps[i].value.match(/px/)) {\r\n          var pxWidth = el.styleProps[i].value.replace('px', '');\r\n          el.setAttribute('width', pxWidth);\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction juiceDocument(document, options, callback) {\r\n  assert.ok(options.url, \"options.url is required\");\r\n  options = getDefaultOptions(options);\r\n  extractCssFromDocument(document, options, function(err, css) {\r\n    css += \"\\n\" + options.extraCss;\r\n    inlineDocumentWithCb(document, css, options, callback);\r\n  });\r\n}\r\n\r\nfunction juiceContent(html, options, callback) {\r\n  assert.ok(options.url, \"options.url is required\");\r\n  options = getDefaultOptions(options);\r\n  // hack to force jsdom to see this argument as html content, not a url\r\n  // or a filename. https://github.com/tmpvar/jsdom/issues/554\r\n  html += \"\\n\";\r\n  var document = utils.jsdom(html);\r\n  juiceDocument(document, options, function(err) {\r\n    if (err) {\r\n      // free the associated memory\r\n      // with lazily created parentWindow\r\n      try {\r\n       document.parentWindow.close();\r\n      } catch (cleanupErr) {}\r\n      callback(err);\r\n    } else {\r\n      var inner = document.innerHTML;\r\n      // free the associated memory\r\n      // with lazily created parentWindow\r\n      try {\r\n        document.parentWindow.close();\r\n      } catch (cleanupErr) {}\r\n      callback(null, inner);\r\n    }\r\n  });\r\n}\r\n\r\nfunction getDefaultOptions(options) {\r\n  return utils.extend({\r\n    extraCss: \"\",\r\n    applyStyleTags: true,\r\n    removeStyleTags: true,\r\n    applyLinkTags: true,\r\n    removeLinkTags: true,\r\n    applyLinksToStyleTags: true,\r\n    preserveMediaQueries: false,\r\n    applyWidthAttributes: false,\r\n  }, options);\r\n}\r\n\r\nfunction juiceFile(filePath, options, callback) {\r\n  // set default options\r\n  fs.readFile(filePath, 'utf8', function(err, content) {\r\n    if (err) return callback(err);\r\n    options = getDefaultOptions(options); // so we can mutate options without guilt\r\n    var slashes = os.platform() === 'win32' ? '\\\\\\\\' : '//';\r\n    options.url = options.url || (\"file:\" + slashes + path.resolve(process.cwd(), filePath));\r\n    juiceContent(content, options, callback);\r\n  });\r\n}\r\n\r\nfunction inlineContent(html, css) {\r\n  var document = utils.jsdom(html);\r\n  inlineDocument(document, css, {});\r\n  var inner = document.innerHTML;\r\n  // free the associated memory\r\n  // with lazily created parentWindow\r\n  try {\r\n    document.parentWindow.close();\r\n  } catch (cleanupErr) {}\r\n  return inner;\r\n}\r\n\r\n/**\r\n * Inlines the CSS specified by `css` into the `html`\r\n *\r\n * @param {String} html\r\n * @param {String} css\r\n * @api public\r\n */\r\n\r\nfunction juice (arg1, arg2, arg3) {\r\n  // legacy behavior\r\n  if (typeof arg2 === 'string') return inlineContent(arg1, arg2);\r\n  var options = arg3 ? arg2 : {};\r\n  var callback = arg3 ? arg3 : arg2;\r\n  juiceFile(arg1, options, callback);\r\n}\r\n\r\nfunction inlineDocumentWithCb(document, css, options, callback) {\r\n  try {\r\n    inlineDocument(document, css, options);\r\n    callback();\r\n  } catch (err) {\r\n    callback(err);\r\n  }\r\n}\r\n\r\nfunction removeStyleTags(document, options) {\r\n  if (options.removeStyleTags) {\r\n    var stylesList = document.getElementsByTagName(\"style\");\r\n\r\n    for (i = 0; i < stylesList.length; ++i) {\r\n      var styleElement = stylesList[i];\r\n      if (options.preserveMediaQueries) {\r\n        var mediaQueries = utils.getMediaQueryText(styleElement.childNodes[0].nodeValue);\r\n        styleElement.childNodes[0].nodeValue = mediaQueries;\r\n      }\r\n      else {\r\n        styleElement.parentNode.removeChild(styleElement);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction getStylesData(document, options, callback) {\r\n  var results = [];\r\n  if (options.applyStyleTags) {\r\n    var stylesList = document.getElementsByTagName(\"style\");\r\n    var i, styleDataList, styleData, styleElement;\r\n    for (i = 0; i < stylesList.length; ++i) {\r\n      styleElement = stylesList[i];\r\n      styleDataList = styleElement.childNodes;\r\n      if (styleDataList.length !== 1) {\r\n        callback(new Error(\"empty style element\"));\r\n        return;\r\n      }\r\n      styleData = styleDataList[0].data;\r\n      results.push(styleData);\r\n    }\r\n  }\r\n  removeStyleTags(document, options);\r\n  callback(null, results);\r\n}\r\n\r\nfunction getHrefContent(destHref, sourceHref, callback) {\r\n  var resolvedUrl = url.resolve(sourceHref, destHref);\r\n  var parsedUrl = url.parse(resolvedUrl);\r\n  if (parsedUrl.protocol === 'file:') {\r\n    if(path.extname(sourceHref)) {\r\n      sourceHref = path.dirname(sourceHref);\r\n    }\r\n    var filePath = path.join(sourceHref.split(\"file:\" + path.sep)[1], destHref); //linux\r\n    if(path.sep==='\\\\') { //windows, no leading separator\r\n      filePath = filePath.substr(1);\r\n    }\r\n    fs.readFile(decodeURIComponent(filePath), 'utf8', callback);\r\n  } else {\r\n    getRemoteContent(resolvedUrl, callback);\r\n  }\r\n}\r\n\r\nfunction getRemoteContent(remoteUrl, callback) {\r\n  superagent.get(remoteUrl).buffer().end(function(err, resp) {\r\n    if (err) {\r\n      callback(err);\r\n    } else if (resp.ok) {\r\n      callback(null, resp.text);\r\n    } else {\r\n      callback(new Error(\"GET \" + remoteUrl + \" \" + resp.status));\r\n    }\r\n  });\r\n}\r\n\r\nfunction getStylesheetList(document, options) {\r\n  var results = [];\r\n  var linkList = document.getElementsByTagName(\"link\");\r\n  var link, i, j, attr, attrs, length1, length2;\r\n  \r\n  for (i = 0, length1 = linkList.length; i < length1; i++) {\r\n    link = linkList[i];\r\n    attrs = {};\r\n    for (j = 0, length2 = link.attributes.length; j < length2; j++) {\r\n      attr = link.attributes[j];\r\n      attrs[attr.name.toLowerCase()] = attr.value;\r\n    }\r\n    if (attrs.rel && attrs.rel.toLowerCase() === 'stylesheet') {\r\n      if (options.applyLinkTags || options.applyLinksToStyleTags) results.push({ href: attrs.href, link: link });\r\n      if (options.removeLinkTags && !options.applyLinksToStyleTags) {\r\n        link.parentNode.removeChild(link);\r\n      }\r\n    }\r\n  }\r\n  return results;\r\n}\r\n\r\nfunction extractCssFromDocument(document, options, callback) {\r\n  var pend = new Pend();\r\n  var index = 0;\r\n  var stylesData;\r\n  var moreStylesData = [];\r\n\r\n  pend.go(function(callback) { \r\n    getStylesData(document, options, function(err, val) {\r\n      stylesData = val;\r\n      callback(err);\r\n    });\r\n  });\r\n  getStylesheetList(document, options).forEach(function (stylesheet) {\r\n    pend.go(function(callback) {\r\n      var listIndex = index++;\r\n      getHrefContent(stylesheet.href, options.url, function(err, val) {\r\n        moreStylesData[listIndex] = { css: val, link: stylesheet.link };\r\n        callback(err);\r\n      });\r\n    });\r\n  });\r\n  pend.wait(function (err, results) {\r\n    if (err) return callback(err);\r\n    moreStylesData.forEach(function(stylesheet) {\r\n      stylesData.push(stylesheet.css);\r\n      if (options.applyLinksToStyleTags) {\r\n        var styleTag = document.createElement(\"style\");\r\n        styleTag.appendChild(document.createTextNode(stylesheet.css));\r\n        stylesheet.link.parentNode.replaceChild(styleTag, stylesheet.link);\r\n      }\r\n    });\r\n\r\n    removeStyleTags(document, options);\r\n\r\n    var css = stylesData.join(\"\\n\");\r\n    callback(null, css);\r\n  });\r\n}\r\n\r\n","/home/travis/build/npmtest/node-npmtest-juice2/node_modules/juice2/lib/utils.js":"\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar fs = require('fs')\r\n  , cssom = require('cssom')\r\n  , jsdom = require('jsdom')\r\n  , own = {}.hasOwnProperty\r\n  , os = require('os');\r\n\r\n/**\r\n * Returns an array of the selectors.\r\n *\r\n * @license Sizzle CSS Selector Engine - MIT\r\n * @param {String} selectorText from cssom\r\n * @api public\r\n */\r\n\r\nexports.extract = function extract (selectorText) {\r\n  var attr = 0\r\n    , sels = []\r\n    , sel = ''\r\n\r\n  for (var i = 0, l = selectorText.length; i < l; i++) {\r\n    var c = selectorText.charAt(i);\r\n\r\n    if (attr) {\r\n      if (']' === c || ')' === c) attr--;\r\n      sel += c;\r\n    } else {\r\n      if (',' === c) {\r\n        sels.push(sel);\r\n        sel = '';\r\n      } else {\r\n        if ('[' === c || '(' === c) attr++;\r\n        if (sel.length || (c !== ',' && c !== '\\n' && c !== ' ')) sel += c;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (sel.length) sels.push(sel);\r\n\r\n  return sels;\r\n}\r\n\r\n/**\r\n * Returns a parse tree for a CSS source.\r\n * If it encounters multiple selectors separated by a comma, it splits the\r\n * tree.\r\n *\r\n * @param {String} css source\r\n * @api public\r\n */\r\n\r\nexports.parseCSS = function (css) {\r\n  var rules = cssom.parse(css).cssRules || []\r\n    , ret = []\r\n\r\n  for (var i = 0, l = rules.length; i < l; i++) {\r\n    if (rules[i].selectorText) { // media queries don't have selectorText\r\n      var rule = rules[i]\r\n        , selectors = exports.extract(rule.selectorText)\r\n\r\n      for (var ii = 0, ll = selectors.length; ii < ll; ii++) {\r\n        ret.push([selectors[ii], rule.style]);\r\n      }\r\n    }\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\n\r\n/**\r\n * Returns Media Query text for a CSS source.\r\n *\r\n * @param {String} css source\r\n * @api public\r\n */\r\n\r\nexports.getMediaQueryText = function ( css )\r\n{\r\n\tvar rules = cssom.parse( css ).cssRules || []\r\n\tvar queries = [];\r\n\r\n\tfor ( var i = 0, l = rules.length; i < l; i++ )\r\n\t{\r\n\t\t/* CSS types\r\n\t\t  STYLE: 1,\r\n\t\t  IMPORT: 3,\r\n\t\t  MEDIA: 4,\r\n\t\t  FONT_FACE: 5,\r\n\t\t */\r\n\r\n\t\tif ( rules[i].type === cssom.CSSMediaRule.prototype.type )\r\n\t\t{\r\n\t\t\tvar query = rules[i];\r\n\t\t\tvar queryString = [];\r\n\r\n\t\t\tqueryString.push( os.EOL + \"@media \" + query.media[0] + \" {\" );\r\n\r\n\t\t\tfor ( var ii = 0, ll = query.cssRules.length; ii < ll; ii++ )\r\n\t\t\t{\r\n\t\t\t\tvar rule = query.cssRules[ii];\r\n\r\n\t\t\t\tif ( rule.type === cssom.CSSStyleRule.prototype.type || rule.type === cssom.CSSFontFaceRule.prototype.type )\r\n\t\t\t\t{\r\n\t\t\t\t\tqueryString.push( \"  \" + ( rule.type === cssom.CSSStyleRule.prototype.type ? rule.selectorText : \"@font-face\" ) + \" {\" );\r\n\r\n\t\t\t\t\tfor ( var style = 0; style < rule.style.length; style++ )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar property = rule.style[style];\r\n\t\t\t\t\t\tvar value = rule.style[property];\r\n\t\t\t\t\t\tvar important = rule.style._importants[property] ? \" !important\" : \"\";\r\n\t\t\t\t\t\tqueryString.push( \"    \" + property + \": \" + value + important + \";\" );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tqueryString.push( \"  }\" );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tqueryString.push( \"}\" );\r\n\t\t\tvar result = queryString.length ? queryString.join( os.EOL ) + os.EOL : \"\";\r\n\r\n\t\t\tqueries.push( result );\r\n\t\t}\r\n\t}\r\n\r\n\treturn queries.join( os.EOL );\r\n}\r\n\r\n/**\r\n * Returns a JSDom jQuery object\r\n *\r\n * api public\r\n */\r\n\r\nexports.jsdom = function (html) {\r\n  return jsdom.html(html, null, {\r\n    features: {\r\n        QuerySelector: ['1.0']\r\n      , FetchExternalResources: false\r\n      , ProcessExternalResources: false\r\n      , MutationEvents: false\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Converts to array\r\n *\r\n * @api public\r\n */\r\n\r\nexports.toArray = function (arr) {\r\n  var ret = [];\r\n\r\n  for (var i = 0, l = arr.length; i < l; i++)\r\n    ret.push(arr[i]);\r\n\r\n  return ret;\r\n};\r\n\r\n/**\r\n * Compares two specificity vectors, returning the winning one.\r\n *\r\n * @param {Array} vector a\r\n * @param {Array} vector b\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nexports.compare = function (a, b) {\r\n  for (var i = 0; i < 4; i++) {\r\n    if (a[i] === b[i]) continue;\r\n    if (a[i] > b[i]) return a;\r\n    return b;\r\n  }\r\n\r\n  return b;\r\n}\r\n\r\nexports.extend = function (obj, src) {\r\n  for (var key in src) if (own.call(src, key)) obj[key] = src[key];\r\n  return obj;\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-juice2/node_modules/juice2/lib/selector.js":"\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar parser = require('slick').parse\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = exports = Selector;\r\n\r\n/**\r\n * CSS selector constructor.\r\n *\r\n * @param {String} selector text\r\n * @param {Array} optionally, precalculated specificity\r\n * @api public\r\n */\r\n\r\nfunction Selector (text, spec) {\r\n  this.text = text;\r\n  this.spec = spec;\r\n}\r\n\r\n/**\r\n * Get parsed selector.\r\n *\r\n * @api public\r\n */\r\n\r\nSelector.prototype.parsed = function () {\r\n  if (!this.tokens) this.tokens = parse(this.text);\r\n  return this.tokens;\r\n};\r\n\r\n/**\r\n * Lazy specificity getter\r\n *\r\n * @api public\r\n */\r\n\r\nSelector.prototype.specificity = function () {\r\n  if (!this.spec) this.spec = specificity(this.text, this.parsed());\r\n  return this.spec;\r\n\r\n  function specificity (text, parsed) {\r\n    var expressions = parsed || parse(text)\r\n      , spec = [0, 0, 0, 0]\r\n      , nots = []\r\n\r\n    for (var i = 0; i < expressions.length; i++) {\r\n      var expression = expressions[i]\r\n        , pseudos = expression.pseudos\r\n\r\n      // id awards a point in the second column\r\n      if (expression.id) spec[1]++;\r\n\r\n      // classes and attributes award a point each in the third column\r\n      if (expression.attributes) spec[2] += expression.attributes.length;\r\n      if (expression.classList) spec[2] += expression.classList.length;\r\n\r\n      // tag awards a point in the fourth column\r\n      if (expression.tag && expression.tag !== '*') spec[3]++;\r\n\r\n      // pseudos award a point each in the fourth column\r\n      if (pseudos) {\r\n        spec[3] += pseudos.length;\r\n\r\n        for (var p = 0; p < pseudos.length; p++) {\r\n         if (pseudos[p].key === 'not'){\r\n            nots.push(pseudos[p].value);\r\n            spec[3]--;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    for (var ii = nots.length; ii--;) {\r\n      var not = specificity(nots[ii]);\r\n      for (var jj = 4; jj--;) spec[jj] += not[jj];\r\n    }\r\n\r\n    return spec;\r\n  }\r\n}\r\n\r\n/**\r\n * Parses a selector and returns the tokens.\r\n *\r\n * @param {String} selector\r\n * @api private.\r\n */\r\n\r\nfunction parse (text) {\r\n  try {\r\n    return parser(text)[0];\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-juice2/node_modules/juice2/lib/property.js":"\r\n/**\r\n * juice\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\nmodule.exports = exports = Property;\r\n\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar compare = require('./utils').compare\r\n\r\n/**\r\n * CSS property constructor.\r\n *\r\n * @param {String} property\r\n * @param {String} value\r\n * @param {Selector} selector the property originates from\r\n * @api public\r\n */\r\n\r\nfunction Property (prop, value, selector) {\r\n  this.prop = prop;\r\n  this.value = value;\r\n  this.selector = selector\r\n}\r\n\r\n/**\r\n * Compares with another Property based on Selector#specificity.\r\n *\r\n * @api public\r\n */\r\n\r\nProperty.prototype.compare = function (property) {\r\n  var a = this.selector.specificity()\r\n    , b = property.selector.specificity()\r\n    , winner = compare(a, b)\r\n\r\n  if (winner == a) return this;\r\n  return property;\r\n};\r\n\r\n/**\r\n * Returns CSS property\r\n *\r\n * @api public\r\n */\r\n\r\nProperty.prototype.toString = function () {\r\n  return this.prop + ': ' + this.value.replace(/['\"]+/g, '') + ';';\r\n};\r\n"}